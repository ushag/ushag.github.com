<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: xpath | Usha Guduri]]></title>
  <link href="http://ushaguduri.com/blog/categories/xpath/atom.xml" rel="self"/>
  <link href="http://ushaguduri.com/"/>
  <updated>2014-03-06T13:17:36-08:00</updated>
  <id>http://ushaguduri.com/</id>
  <author>
    <name><![CDATA[Usha Guduri]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Finding Watir Elements with XPATH]]></title>
    <link href="http://ushaguduri.com/blog/2012/02/24/finding-watir-elements-with-xpath/"/>
    <updated>2012-02-24T16:10:00-08:00</updated>
    <id>http://ushaguduri.com/blog/2012/02/24/finding-watir-elements-with-xpath</id>
    <content type="html"><![CDATA[<p>We recently got into automated ui testing with watir.</p>

<p>First impression: Awesome!</p>

<p>Then we added rspec and rake when the nightmares began - more about that later perhaps.</p>

<p>For a simple page with a few DOM elements, its pretty straightforward. Enter a highly dynamic, complex rendering logic and the DOM access breaks down. Something even as intellectually simple as:</p>

<p>```ruby</p>

<pre><code>browser.div(:id=&gt;”myid”).div(:class=&gt;”myclass”)
</code></pre>

<p>```</p>

<!-- more -->


<p>actually coughed and puffed with the watir-webdriver &lt;0.5 versions, specifically on Firefox. But of course, there is a workaround - XPATH! We are ‘Engineers’ afterall!</p>

<p>```ruby</p>

<pre><code>browser.element(:xpath =&gt; “//div[id=myid]/div[class=myclass]”)
</code></pre>

<p>```</p>

<p>The problem with XPath though, is that its absolute and highly specific. If you so much as change the class from</p>

<p>```html</p>

<div class=”myclass myclass2”>
```

Xpath breaks and so do your tests.

**Solution:** Update to watir-webdriver 0.5.2

**Lesson:** Be wary of anything < 1.0 

]]></content>
  </entry>
  
</feed>
